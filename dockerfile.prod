# Dependencias
FROM node:21-alpine3.19 as deps

WORKDIR /usr/src/app

COPY package*.json ./

RUN npm install


# Builder - Construye la aplicaci칩n
FROM node:21-alpine3.19 as builder

WORKDIR /usr/src/app

# Copiar de deps, los modulos de node que se instalaron en el paso anterior

COPY --from=deps /usr/src/app/node_modules ./node_modules

# Copiar todo el codigo fuente de la aplicaci칩n
COPY . .

# RUN npm run test
RUN npm run build

# Solo dejar las dependencias de producci칩n, todo lo dem치s se elimina
RUN npm ci -f --only=production && npm cache clean --force

RUN npx prisma generate

# Crear la imagen de Docker
FROM node:21-alpine3.19 as prod

WORKDIR /usr/src/app

# Copiar de builder, los modulos de node que se instalaron y limpiaron en el paso anterior
COPY --from=builder /usr/src/app/node_modules ./node_modules

# Copiar la carpeta de DIST y de prisma
COPY --from=builder /usr/src/app/dist ./dist
COPY --from=builder /usr/src/app/prisma ./prisma


ENV NODE_ENV=production

# El usuario por defecto tiene privilegios demasiado altos, puede borrar directorios, etc.
RUN adduser --disabled-password --gecos "" appuser
USER appuser

EXPOSE 3000

CMD [ "node", "dist/main.js" ]